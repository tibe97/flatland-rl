About to train 1 agents on (25,25) env.
Parameters:
max_num_cities: 2
max_rails_between_cities: 2
max_rails_in_city: 4
malfunction_rate: 0
max_duration: 50
min_duration: 20
num_episodes: 300
starting from episode: 0
max_steps: 404
eps_initial: 1
eps_decay_rate: 0.999
learning_rate: 0.05
learning_rate_decay: 0.5
done_reward: 0
deadlock_reward: -1000
batch_size: 128
attention_0.att_l                                         (1, 4, 10)
attention_0.att_r                                         (1, 4, 10)
attention_0.bias                                               (40,)
attention_0.lin_l.weight                                    (40, 14)
attention_1.att_l                                         (1, 4, 10)
attention_1.att_r                                         (1, 4, 10)
attention_1.bias                                               (40,)
attention_1.lin_l.weight                                    (40, 40)
attention_2.att_l                                         (1, 4, 10)
attention_2.att_r                                         (1, 4, 10)
attention_2.bias                                               (40,)
attention_2.lin_l.weight                                    (40, 40)
out_att.att_l                                              (1, 1, 1)
out_att.att_r                                              (1, 1, 1)
out_att.bias                                                    (1,)
out_att.lin_l.weight                                         (1, 40)
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
DEPRECATED - RailEnv arg: malfunction_and_process_data - use malfunction_generator
filename is: test_results/
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
Traceback (most recent call last):
  File "train.py", line 440, in <module>
    main(args)
  File "train.py", line 250, in main
    actions, mean_fields, q_values = infer_acts(states, actions)
  File "train.py", line 245, in infer_acts
    q_action = ep_controller.rl_agent.act(state)
  File "/home/runnphoenix/work/flatland-rl/rainbow/dueling_double_dqn.py", line 185, in act
    out_value = self.qnetwork_value_local(batch.x, batch.edge_index)
  File "/home/runnphoenix/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/runnphoenix/work/flatland-rl/rainbow/model.py", line 175, in forward
    x = self.attentions[l](x, adj)
  File "/home/runnphoenix/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/runnphoenix/anaconda3/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 147, in forward
    edge_index, _ = remove_self_loops(edge_index)
  File "/home/runnphoenix/anaconda3/lib/python3.8/site-packages/torch_geometric/utils/loop.py", line 33, in remove_self_loops
    edge_index = edge_index[:, mask]
KeyboardInterrupt
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[0, 1]])
MF: tensor([0., 1.], device='cuda:0')
OTHER ACTIONS: tensor([[1, 0]])
MF: tensor([1., 0.], device='cuda:0')