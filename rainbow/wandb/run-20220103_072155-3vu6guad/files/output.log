About to train 1 agents on (25,25) env.
Parameters:
max_num_cities: 2
max_rails_between_cities: 2
max_rails_in_city: 4
malfunction_rate: 0
max_duration: 50
min_duration: 20
num_episodes: 200
starting from episode: 0
max_steps: 404
eps_initial: 1
eps_decay_rate: 0.999
learning_rate: 0.02
learning_rate_decay: 0.5
done_reward: 0
deadlock_reward: -1000
batch_size: 128
attention_0.att_l                                         (1, 4, 10)
attention_0.att_r                                         (1, 4, 10)
attention_0.bias                                               (40,)
attention_0.lin_l.weight                                    (40, 12)
attention_1.att_l                                         (1, 4, 10)
attention_1.att_r                                         (1, 4, 10)
attention_1.bias                                               (40,)
attention_1.lin_l.weight                                    (40, 40)
attention_2.att_l                                         (1, 4, 10)
attention_2.att_r                                         (1, 4, 10)
attention_2.bias                                               (40,)
attention_2.lin_l.weight                                    (40, 40)
out_att.att_l                                              (1, 1, 1)
out_att.att_r                                              (1, 1, 1)
out_att.bias                                                    (1,)
out_att.lin_l.weight                                         (1, 40)
Traceback (most recent call last):
  File "train.py", line 475, in <module>
    main(args)
  File "train.py", line 128, in main
    lr_scheduler = CyclicLR(rl_agent.optimizer_value, base_lr=0.001, max_lr=0.02, step_size_up=40, mode="triangular2")
  File "/home/runnphoenix/anaconda3/lib/python3.8/site-packages/torch/optim/lr_scheduler.py", line 852, in __init__
    raise ValueError('optimizer must support momentum with `cycle_momentum` option enabled')
ValueError: optimizer must support momentum with `cycle_momentum` option enabled